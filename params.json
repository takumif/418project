{
  "name": "Parallelized Shakashaka Solver",
  "tagline": "15-418 Final Project by Vui Chee Siew and Takumi Fujimoto",
  "body": "## Project Proposal\r\n### Summary\r\nWe will write an efficient, parallel shakashaka solver using JavaScript Web Workers.\r\n\r\n### Background\r\n[Shakashaka](https://en.wikipedia.org/wiki/Shakashaka) is a logic puzzle, in which you fill a grid of squares with triangles to form rectangles. It is similar to nonograms in concept, and is known to be NP-complete.\r\n\r\nJavaScript [Web Workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) are stuff that we'll do. yeah.\r\n\r\n`\r\nwhile not_solved and have_branches_to_investigate:\r\n  branch = get_branch_to_investigate\r\n  if has_valid_moves(branch)\r\n    tell_a_worker_to_validate_move`\r\n\r\n### Challenges\r\nWe are traversing a tree of possible grid configurations that spreads exponentially. We will need to figure out an efficient way to distribute the work among the workers (so that as many workers as possible are working at any given time). We also will need to efficiently duplicate data when we're going down multiple branches (for different configurations).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}